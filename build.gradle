plugins {
    id 'fabric-loom' version '0.13-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.1'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven {
        name = 'Jitpack'
        url 'https://jitpack.io/'
    }
    maven {
        name = 'auoeke'
        url = 'https://maven.auoeke.net'
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.gudenau.lib:unsafe:${project.unsafe_version}"
    include "net.gudenau.lib:unsafe:${project.unsafe_version}"

    modImplementation "org.openjdk.jol:jol-core:${project.jol_version}"
    include "org.openjdk.jol:jol-core:${project.jol_version}"

    modImplementation "io.github.classgraph:classgraph:${project.classgraph_version}"
    include "io.github.classgraph:classgraph:${project.classgraph_version}"

    modImplementation "net.bytebuddy:byte-buddy-agent:${project.byte_buddy_version}"
    include "net.bytebuddy:byte-buddy-agent:${project.byte_buddy_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }

    manifest(({
        attributes(
                "Manifest-Version": "1.0",
                "Agent-Class": "ca.fxco.experimentalperformance.memoryDensity.mixinHacks.InstrumentationAgent",
                "Can-Retransform-Classes": "true",
                "Can-Redefine-Classes": "true"
        )
    } as groovy.lang.Closure<?>))
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
